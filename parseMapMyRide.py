# Author David Bernal
'''
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
'''

# Parser for mapMyRide appliations, extracts user, workout and GPS data for every workout.
import sqlite3
import os
import sys
import time

def epocToUTC(epoc):
    return time.strftime('%Y-%m-%d %H:%M:%S', time.gmtime(float(epoc)))

mapMyRideWorkoutDB = "workout.db"

if not os.path.isfile(mapMyRideWorkoutDB):
    print "Please place the file " + mapMyRideWorkoutDB + " on the same folder than " + sys.argv[0] + " and try again."
    sys.exit(1)

f = open("workoutSummary.csv", "w")
db = sqlite3.connect(mapMyRideWorkoutDB)
res = db.execute("select localid, name, starttime, endtime, notes from workouts")
col_name_list = [tuple[0] for tuple in res.description]
f.write(";".join(col_name_list))
    
workoutCount = 0
for row in res:
    workoutCount += 1
    f.write("\n" + str(row[0]) + ";" + row[1] + ";" + epocToUTC(row[2][:10]) + ";" + epocToUTC(row[3][:10]) + ";" + str(row[4])  )
f.close() 
print "Workout(s) extracted: " + str(workoutCount)

f = open("workoutGPS.txt", "w")
res = db.execute("select localid, timestamp, longitude, latitude, altitude from timeseries")
col_name_list = [tuple[0] for tuple in res.description]
f.write(";".join(col_name_list) + ";Google maps URL (Generated by the script)")

timeSeriesCount = 0
for row in res:
    timeSeriesCount += 1
    f.write("\n" + row[0] + ";" + epocToUTC(str(row[1])[:10]) + ";" + str(row[2]) + ";" + str(row[3]) + ";" + str(row[4]) + ";http://maps.google.com/?q=" + str(row[3]) +","+str(row[2]))
f.close()

print "Entries with GPS location extracted: " + str(timeSeriesCount) + " Import the file workoutGPS.txt into excel using ; as delimiter."

mapMyRideUserDB = "mmdk_user"

if not os.path.isfile(mapMyRideUserDB):
    print "To extract user data please place the file " + mapMyRideUserDB + " on the same folder than " + sys.argv[0] + " and try again."
    sys.exit(1)
    
f = open("userMapMyRide.csv", "w")
db = sqlite3.connect(mapMyRideUserDB)    
res = db.execute("select username, email, first_name, last_name, birthdate, height, weight, gender, date_joined, location_country, profile_image_medium from user_entity")
col_name_list = [tuple[0] for tuple in res.description]
f.write(",".join(col_name_list))

for row in res:
    f.write("\n" + row[0] + "," + row[1] + "," + row[2] + "," + row[3] + "," + str(row[4]) + "," + str(row[5])+ "," + str(row[6]) + "," + row[7] + "," + epocToUTC(str(row[8])[:10]) + "," + row[9] + "," + row[10])
f.close()
print "Extracted user data into userMapMyRide.csv"